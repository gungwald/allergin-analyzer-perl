%!PS-Adobe-2.0
%%Title: allergin-graph.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Fri Nov 11 21:34:42 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (allergin-graph.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (bill)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov 11 21:34:42 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
686 448 M
63 0 V
6198 0 R
-63 0 V
stroke
602 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 1143 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1143 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 1838 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1838 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 2534 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 3229 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3229 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 3924 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3924 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 4619 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 448 M
0 63 V
0 4108 R
0 -63 V
stroke
686 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (01/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
873 448 M
0 31 V
0 4140 R
0 -31 V
1060 448 M
0 31 V
0 4140 R
0 -31 V
1273 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1273 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (02/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1460 448 M
0 31 V
0 4140 R
0 -31 V
1647 448 M
0 31 V
0 4140 R
0 -31 V
1806 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1806 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (03/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1993 448 M
0 31 V
0 4140 R
0 -31 V
2180 448 M
0 31 V
0 4140 R
0 -31 V
2393 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2393 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (04/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2580 448 M
0 31 V
0 4140 R
0 -31 V
2767 448 M
0 31 V
0 4140 R
0 -31 V
2944 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2944 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (05/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3131 448 M
0 31 V
0 4140 R
0 -31 V
3318 448 M
0 31 V
0 4140 R
0 -31 V
3532 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3532 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (06/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3719 448 M
0 31 V
0 4140 R
0 -31 V
3906 448 M
0 31 V
0 4140 R
0 -31 V
4082 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4082 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (07/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4269 448 M
0 31 V
0 4140 R
0 -31 V
4456 448 M
0 31 V
0 4140 R
0 -31 V
4670 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4670 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (08/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4857 448 M
0 31 V
0 4140 R
0 -31 V
5044 448 M
0 31 V
0 4140 R
0 -31 V
5239 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5239 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (09/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5426 448 M
0 31 V
0 4140 R
0 -31 V
5613 448 M
0 31 V
0 4140 R
0 -31 V
5808 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5808 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (10/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5995 448 M
0 31 V
0 4140 R
0 -31 V
6182 448 M
0 31 V
0 4140 R
0 -31 V
6397 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6397 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (11/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6584 448 M
0 31 V
0 4140 R
0 -31 V
6771 448 M
0 31 V
0 4140 R
0 -31 V
6947 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (12/01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Date) Cshow
grestore
LTb
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
3816 98 M
(Pollen & Mold Spore Count) Cshow
LTb
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
3816 4829 M
(Comparison of Allergins by Year) Cshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
6296 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (2013)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 6380 4486 M
399 0 V
733 448 M
18 0 V
19 0 V
19 0 V
19 0 V
56 35 V
18 -35 V
19 0 V
19 0 V
18 35 V
75 -35 V
19 0 V
19 0 V
18 0 V
56 0 V
19 0 V
19 0 V
19 0 V
18 0 V
56 0 V
19 0 V
19 35 V
18 -35 V
19 0 V
56 0 V
19 0 V
19 0 V
18 0 V
19 0 V
75 0 V
19 0 V
18 0 V
19 0 V
56 35 V
19 -35 V
112 76 V
19 -41 V
18 -35 V
19 0 V
19 0 V
56 0 V
19 0 V
18 0 V
19 111 V
19 -76 V
56 -35 V
18 0 V
19 0 V
19 35 V
19 -35 V
56 0 V
18 0 V
19 0 V
19 0 V
18 0 V
57 0 V
18 35 V
19 -35 V
19 35 V
18 -35 V
56 0 V
19 0 V
19 0 V
19 0 V
18 0 V
56 0 V
19 0 V
19 0 V
18 0 V
19 0 V
56 0 V
19 35 V
19 -35 V
18 35 V
19 -35 V
56 76 V
19 -41 V
19 340 V
18 -187 V
19 -153 V
56 153 V
19 -153 V
18 41 V
19 -41 V
19 41 V
56 -76 V
19 0 V
18 0 V
19 76 V
19 -41 V
56 0 V
19 -35 V
18 0 V
19 0 V
19 0 V
56 0 V
18 35 V
19 0 V
19 76 V
19 -111 V
74 264 V
19 -111 V
19 -118 V
stroke 3538 483 M
18 187 V
57 418 V
18 -564 V
19 -41 V
19 -35 V
18 76 V
56 77 V
19 -77 V
19 35 V
19 0 V
18 42 V
56 222 V
19 -299 V
19 223 V
18 -223 V
19 188 V
56 -42 V
19 230 V
19 -111 V
18 -77 V
19 -42 V
75 306 V
19 -493 V
18 340 V
19 -187 V
56 598 V
19 -522 V
18 -76 V
19 153 V
19 563 V
56 -306 V
37 -487 V
19 77 V
19 299 V
56 -112 V
19 -34 V
18 486 V
19 -452 V
19 -375 V
56 598 V
18 -334 V
19 111 V
19 77 V
19 -188 V
56 223 V
18 -334 V
19 -118 V
19 41 V
18 452 V
57 -528 V
18 35 V
19 -35 V
19 111 V
18 341 V
56 -42 V
19 -35 V
19 77 V
19 76 V
18 334 V
56 -563 V
19 862 V
19 -188 V
18 417 V
19 1085 V
5333 747 L
19 2363 V
18 -1383 V
19 -681 V
187 1244 V
19 1988 V
18 -1918 V
38 -939 V
56 42 V
19 375 V
18 709 V
5763 601 L
19 69 V
56 2746 V
19 -1578 V
18 640 V
5894 636 L
19 528 V
74 1349 V
6006 935 L
19 187 V
19 153 V
56 -528 V
18 341 V
19 0 V
19 1237 V
6174 448 L
57 1314 V
18 35 V
19 -445 V
19 187 V
18 -903 V
56 264 V
19 1050 V
6399 559 L
19 341 V
18 35 V
56 153 V
19 -376 V
19 -264 V
18 188 V
733 448 Pls
751 448 Pls
770 448 Pls
789 448 Pls
808 448 Pls
864 483 Pls
882 448 Pls
901 448 Pls
920 448 Pls
938 483 Pls
1013 448 Pls
1032 448 Pls
1051 448 Pls
1069 448 Pls
1125 448 Pls
1144 448 Pls
1163 448 Pls
1182 448 Pls
1200 448 Pls
1256 448 Pls
1275 448 Pls
1294 483 Pls
1312 448 Pls
1331 448 Pls
1387 448 Pls
1406 448 Pls
1425 448 Pls
1443 448 Pls
1462 448 Pls
1537 448 Pls
1556 448 Pls
1574 448 Pls
1593 448 Pls
1649 483 Pls
1668 448 Pls
1780 524 Pls
1799 483 Pls
1817 448 Pls
1836 448 Pls
1855 448 Pls
1911 448 Pls
1930 448 Pls
1948 448 Pls
1967 559 Pls
1986 483 Pls
2042 448 Pls
2060 448 Pls
2079 448 Pls
2098 483 Pls
2117 448 Pls
2173 448 Pls
2191 448 Pls
2210 448 Pls
2229 448 Pls
2247 448 Pls
2304 448 Pls
2322 483 Pls
2341 448 Pls
2360 483 Pls
2378 448 Pls
2434 448 Pls
2453 448 Pls
2472 448 Pls
2491 448 Pls
2509 448 Pls
2565 448 Pls
2584 448 Pls
2603 448 Pls
2621 448 Pls
2640 448 Pls
2696 448 Pls
2715 483 Pls
2734 448 Pls
2752 483 Pls
2771 448 Pls
2827 524 Pls
2846 483 Pls
2865 823 Pls
2883 636 Pls
2902 483 Pls
2958 636 Pls
2977 483 Pls
2995 524 Pls
3014 483 Pls
3033 524 Pls
3089 448 Pls
3108 448 Pls
3126 448 Pls
3145 524 Pls
3164 483 Pls
3220 483 Pls
3239 448 Pls
3257 448 Pls
3276 448 Pls
3295 448 Pls
3351 448 Pls
3369 483 Pls
3388 483 Pls
3407 559 Pls
3426 448 Pls
3500 712 Pls
3519 601 Pls
3538 483 Pls
3556 670 Pls
3613 1088 Pls
3631 524 Pls
3650 483 Pls
3669 448 Pls
3687 524 Pls
3743 601 Pls
3762 524 Pls
3781 559 Pls
3800 559 Pls
3818 601 Pls
3874 823 Pls
3893 524 Pls
3912 747 Pls
3930 524 Pls
3949 712 Pls
4005 670 Pls
4024 900 Pls
4043 789 Pls
4061 712 Pls
4080 670 Pls
4155 976 Pls
4174 483 Pls
4192 823 Pls
4211 636 Pls
4267 1234 Pls
4286 712 Pls
4304 636 Pls
4323 789 Pls
4342 1352 Pls
4398 1046 Pls
4435 559 Pls
4454 636 Pls
4473 935 Pls
4529 823 Pls
4548 789 Pls
4566 1275 Pls
4585 823 Pls
4604 448 Pls
4660 1046 Pls
4678 712 Pls
4697 823 Pls
4716 900 Pls
4735 712 Pls
4791 935 Pls
4809 601 Pls
4828 483 Pls
4847 524 Pls
4865 976 Pls
4922 448 Pls
4940 483 Pls
4959 448 Pls
4978 559 Pls
4996 900 Pls
5052 858 Pls
5071 823 Pls
5090 900 Pls
5109 976 Pls
5127 1310 Pls
5183 747 Pls
5202 1609 Pls
5221 1421 Pls
5239 1838 Pls
5258 2923 Pls
5333 747 Pls
5352 3110 Pls
5370 1727 Pls
5389 1046 Pls
5576 2290 Pls
5595 4278 Pls
5613 2360 Pls
5651 1421 Pls
5707 1463 Pls
5726 1838 Pls
5744 2547 Pls
5763 601 Pls
5782 670 Pls
5838 3416 Pls
5857 1838 Pls
5875 2478 Pls
5894 636 Pls
5913 1164 Pls
5987 2513 Pls
6006 935 Pls
6025 1122 Pls
6044 1275 Pls
6100 747 Pls
6118 1088 Pls
6137 1088 Pls
6156 2325 Pls
6174 448 Pls
6231 1762 Pls
6249 1797 Pls
6268 1352 Pls
6287 1539 Pls
6305 636 Pls
6361 900 Pls
6380 1950 Pls
6399 559 Pls
6418 900 Pls
6436 935 Pls
6492 1088 Pls
6511 712 Pls
6530 448 Pls
6548 636 Pls
6579 4486 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
